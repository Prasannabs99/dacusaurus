{
  "version": 3,
  "sources": ["../../../../../title/lib/lower-case.js", "../../../../../title/lib/specials.js", "../../../../../title/lib/index.js"],
  "sourcesContent": ["const conjunctions = [\n  'for',\n  'and',\n  'nor',\n  'but',\n  'or',\n  'yet',\n  'so'\n]\n\nconst articles = [\n  'a',\n  'an',\n  'the'\n]\n\nconst prepositions = [\n  'aboard',\n  'about',\n  'above',\n  'across',\n  'after',\n  'against',\n  'along',\n  'amid',\n  'among',\n  'anti',\n  'around',\n  'as',\n  'at',\n  'before',\n  'behind',\n  'below',\n  'beneath',\n  'beside',\n  'besides',\n  'between',\n  'beyond',\n  'but',\n  'by',\n  'concerning',\n  'considering',\n  'despite',\n  'down',\n  'during',\n  'except',\n  'excepting',\n  'excluding',\n  'following',\n  'for',\n  'from',\n  'in',\n  'inside',\n  'into',\n  'like',\n  'minus',\n  'near',\n  'of',\n  'off',\n  'on',\n  'onto',\n  'opposite',\n  'over',\n  'past',\n  'per',\n  'plus',\n  'regarding',\n  'round',\n  'save',\n  'since',\n  'than',\n  'through',\n  'to',\n  'toward',\n  'towards',\n  'under',\n  'underneath',\n  'unlike',\n  'until',\n  'up',\n  'upon',\n  'versus',\n  'via',\n  'with',\n  'within',\n  'without'\n]\n\nmodule.exports = new Set([\n  ...conjunctions,\n  ...articles,\n  ...prepositions\n])\n", "const intended = [\n  'ZEIT',\n  'ZEIT Inc.',\n  'Vercel',\n  'Vercel Inc.',\n  'CLI',\n  'API',\n  'HTTP',\n  'HTTPS',\n  'JSX',\n  'DNS',\n  'URL',\n  'now.sh',\n  'now.json',\n  'vercel.app',\n  'vercel.json',\n  'CI',\n  'CD',\n  'CDN',\n  'package.json',\n  'package.lock',\n  'yarn.lock',\n  'GitHub',\n  'GitLab',\n  'CSS',\n  'Sass',\n  'JS',\n  'JavaScript',\n  'TypeScript',\n  'HTML',\n  'WordPress',\n  'Next.js',\n  'Node.js',\n  'Webpack',\n  'Docker',\n  'Bash',\n  'Kubernetes',\n  'SWR',\n  'TinaCMS',\n  'UI',\n  'UX',\n  'TS',\n  'TSX',\n  'iPhone',\n  'iPad',\n  'watchOS',\n  'iOS',\n  'iPadOS',\n  'macOS',\n  'PHP',\n  'composer.json',\n  'composer.lock',\n  'CMS',\n  'SQL',\n  'C',\n  'C#',\n  'GraphQL',\n  'GraphiQL',\n  'JWT',\n  'JWTs'\n]\n\nmodule.exports = intended\n", "// Utilities\nconst lowerCase = require('./lower-case')\nconst specials = require('./specials')\n\nconst word = \"[^\\\\s'’\\\\(\\\\)!?;:\\\"-]\"\nconst regex = new RegExp(`(?:(?:(\\\\s?(?:^|[.\\\\(\\\\)!?;:\"-])\\\\s*)(${word}))|(${word}))(${word}*[’']*${word}*)`, \"g\")\n\nconst convertToRegExp = specials => specials.map(s => [new RegExp(`\\\\b${s}\\\\b`, 'gi'), s])\n\nfunction parseMatch(match) {\n  const firstCharacter = match[0]\n\n  // test first character\n  if (/\\s/.test(firstCharacter)) {\n    // if whitespace - trim and return\n    return match.slice(1)\n  }\n  if (/[\\(\\)]/.test(firstCharacter)) {\n    // if parens - this shouldn't be replaced\n    return null\n  }\n\n  return match\n}\n\nmodule.exports = (str, options = {}) => {\n  str = str.toLowerCase().replace(regex, (m, lead = '', forced, lower, rest, offset, string) => {\n    const isLastWord = m.length + offset >= string.length;\n\n    const parsedMatch = parseMatch(m)\n    if (!parsedMatch) {\n      return m\n    }\n    if (!forced) {\n      const fullLower = lower + rest\n\n      if (lowerCase.has(fullLower) && !isLastWord) {\n        return parsedMatch\n      }\n    }\n\n    return lead + (lower || forced).toUpperCase() + rest\n  })\n\n  const customSpecials = options.special || []\n  const replace = [...specials, ...customSpecials]\n  const replaceRegExp = convertToRegExp(replace)\n\n  replaceRegExp.forEach(([pattern, s]) => {\n    str = str.replace(pattern, s)\n  })\n\n  return str\n}\n"],
  "mappings": ";;;;;AAAA;AAAA;AAAA,QAAM,eAAe;AAAA,MACnB;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAEA,QAAM,WAAW;AAAA,MACf;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAEA,QAAM,eAAe;AAAA,MACnoBAAI,IAAI;AAAA,MACvB,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACL,CAAC;AAAA;AAAA;;;AC5FD;AAAA;AAAA,QAAM,WAAW;AAAA,MACfjB;AAAA;AACA,QAAM,YAAY;AAClB,QAAM,WAAW;AAEjB,QAAM,OAAO;AACb,QAAM,QAAQ,IAAI,OAAO,yCAAyC,IAAI,OAAO,IAAI,MAAM,IAAI,SAAS,IAAI,MAAM,GAAG;AAEjH,QAAM,kBAAkB,CAAAA,cAAYA,UAAS,IAAI,OAAK,CAAC,IAAI,OAAO,MAAM,CAAC,OAAO,IAAI,GAAG,CAAC,CAAC;AAEzF,aAAS,WAAW,OAAO;AACzB,YAAM,iBAAiB,MAAM,CAAC;AAG9B,UAAI,KAAK,KAAK,cAAc,GAAG;AAE7B,eAAO,MAAM,MAAM,CAAC;AAAA,MACtB;AACA,UAAI,SAAS,KAAK,cAAc,GAAG;AAEjC,eAAO;AAAA,MACT;AAEA,aAAO;AAAA,IACT;AAEA,WAAO,UAAU,CAAC,KAAK,UAAU,CAAC,MAAM;AACtC,YAAM,IAAI,YAAY,EAAE,QAAQ,OAAO,CAAC,GAAG,OAAO,IAAI,QAAQ,OAAO,MAAM,QAAQ,WAAW;AAC5F,cAAM,aAAa,EAAE,SAAS,UAAU,OAAO;AAE/C,cAAM,cAAc,WAAW,CAAC;AAChC,YAAI,CAAC,aAAa;AAChB,iBAAO;AAAA,QACT;AACA,YAAI,CAAC,QAAQ;AACX,gBAAM,YAAY,QAAQ;AAE1B,cAAI,UAAU,IAAI,SAAS,KAAK,CAAC,YAAY;AAC3C,mBAAO;AAAA,UACT;AAAA,QACF;AAEA,eAAO,QAAQ,SAAS,QAAQ,YAAY,IAAI;AAAA,MAClD,CAAC;AAED,YAAM,iBAAiB,QAAQ,WAAW,CAAC;AAC3C,YAAM,UAAU,CAAC,GAAG,UAAU,GAAG,cAAc;AAC/C,YAAM,gBAAgB,gBAAgB,OAAO;AAE7C,oBAAc,QAAQ,CAAC,CAAC,SAAS,CAAC,MAAM;AACtC,cAAM,IAAI,QAAQ,SAAS,CAAC;AAAA,MAC9B,CAAC;AAED,aAAO;AAAA,IACT;AAAA;AAAA;",
  "names": ["specials"]
}
